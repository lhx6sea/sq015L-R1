/*
 * This declarations of the PIC16P015L MCU.
 *
 * This file is part of the GNU PIC library for SDCC, originally
 * created by Molnar Karoly <molnarkaroly@users.sf.net> 2017.
 *
 * This file is generated automatically by the cinc2h.pl, 2017-10-18 01:52:56 UTC.
 *
 * SDCC is licensed under the GNU Public license (GPL) v2. Note that
 * this license covers the code to the compiler and other executables,
 * but explicitly does not cover any code or objects generated by sdcc.
 *
 * For pic device libraries and header files which are derived from
 * Microchip header (.inc) and linker script (.lkr) files Microchip
 * requires that "The header files should state that they are only to be
 * used with authentic Microchip devices" which makes them incompatible
 * with the GPL. Pic device libraries and header files are located at
 * non-free/lib and non-free/include directories respectively.
 * Sdcc should be run with the --use-non-free command line option in
 * order to include non-free header files and libraries.
 *
 * See http://sdcc.sourceforge.net/ for the latest information on sdcc.
 */

#ifndef __PIC16P015L_H__
#define __PIC16P015L_H__

//==============================================================================
//
//	Register Addresses
//
//==============================================================================

#ifndef NO_ADDR_DEFINES

#define INDF_ADDR               0x0000
#define T0_ADDR                 0x0001
#define PCL_ADDR                0x0002
#define STATUS_ADDR             0x0003
#define FSR_ADDR                0x0004
#define PORTA_ADDR              0x0005
#define PORTB_ADDR              0x0006
#define GPR_ADDR                0x0007
#define PCON_ADDR               0x0008
#define IOCB_ADDR               0x0009
#define PCLATH_ADDR             0x000A
#define PDCON_ADDR              0x000B
#define ODCON_ADDR              0x000C
#define PHCON_ADDR              0x000D
#define INTECON_ADDR            0x000E
#define INTFLAG_ADDR            0x000F
#define OPTION_ADDR             0x0041
#define TRISA_ADDR              0x0045
#define TRISB_ADDR              0x0046
#define PHCON1_ADDR             0x0047
#define PWMCON_ADDR             0x0048
#define PWM1P_ADDR              0x0049
#define PWM2P_ADDR              0x004A
#define T0CR_ADDR               0x004B
#define T1CON_ADDR              0x004C
#define T1_ADDR                 0x004D
#define T1LOAD_ADDR             0x004E
#define PWM0P_ADDR              0x004F
#define OSCCON_ADDR             0x0050
#define LVDCON_ADDR             0x0051
#define PDCON1_ADDR             0x0052
#define ODCON1_ADDR             0x0053
#define PWM3EN_ADDR             0x0054
#define PWM3C_ADDR              0x0055
#define PWM3P_ADDR              0x0056
#define PWM3D_ADDR              0x0057
#define PWM3DT_ADDR             0x0058
#define AUXR_ADDR               0x0059
#define IOCA_ADDR               0x005A
#define HIRCTRM_ADDR            0x005B

#endif // #ifndef NO_ADDR_DEFINES

//==============================================================================
//
//	Register Definitions
//
//==============================================================================


//==============================================================================
//        OPTION Bits

extern __at(0x0041) __sfr OPTION;

typedef struct
  {
  unsigned PS0	                : 1;
  unsigned PS1	                : 1;
  unsigned PS2	                : 1;
  unsigned PSA	                : 1;
  unsigned T0SE                 : 1;
  unsigned T0CS	                : 1;
  unsigned INTEDG               : 1;
  unsigned		                : 1;
  } __OPTIONbits_t;

extern __at(0x0041) volatile __OPTIONbits_t OPTIONbits;

#define _PS0                    0x01
#define _PS1                    0x02
#define _PS2                    0x04
#define _PSA                    0x08
#define _T0SE                   0x10
#define _T0CS                   0x20
#define _INTEDG                 0x40

//==============================================================================

extern __at(0x0000) __sfr INDF;
extern __at(0x0001) __sfr T0;
extern __at(0x0002) __sfr PCL;

//==============================================================================
//        STATUS Bits

extern __at(0x0003) __sfr STATUS;

typedef union
  {
  struct
    {
    unsigned C                  : 1;
    unsigned DC                 : 1;
    unsigned Z                  : 1;
    unsigned PD                 : 1;
    unsigned TO                 : 1;
    unsigned GP0                : 1;
    unsigned GP1                : 1;
    unsigned RST                : 1;
    };

  struct
    {
    unsigned                    : 5;
    unsigned GP                 : 2;
    unsigned                    : 1;
    };
  } __STATUSbits_t;

extern __at(0x0003) volatile __STATUSbits_t STATUSbits;

#define _C                      0x01
#define _DC                     0x02
#define _Z                      0x04
#define _PD                     0x08
#define _TO                     0x10
#define _GP0                    0x20
#define _GP1                    0x40
#define _RST                    0x80

//==============================================================================

extern __at(0x0004) __sfr FSR;

//==============================================================================
//        PORTA Bits

extern __at(0x0005) __sfr PORTA;

typedef union
  {
  struct
    {
    unsigned PORTA0             : 1;
    unsigned PORTA1             : 1;
    unsigned PORTA2             : 1;
    unsigned PORTA3             : 1;
    unsigned PORTA4             : 1;
    unsigned PORTA5             : 1;
    unsigned                    : 1;
    unsigned                    : 1;
    };

  struct
    {
    unsigned PORTA              : 6;
    unsigned                    : 2;
    };
  } __PORTAbits_t;

extern __at(0x0005) volatile __PORTAbits_t PORTAbits;

#define _PORTA0                 0x01
#define _PORTA1                 0x02
#define _PORTA2                 0x04
#define _PORTA3                 0x08
#define _PORTA4                 0x10
#define _PORTA5                 0x20

//==============================================================================


//==============================================================================
//        PORTB Bits

extern __at(0x0006) __sfr PORTB;

typedef struct
  {
  unsigned PORTB0               : 1;
  unsigned PORTB1               : 1;
  unsigned PORTB2               : 1;
  unsigned PORTB3               : 1;
  unsigned PORTB4               : 1;
  unsigned PORTB5               : 1;
  unsigned PORTB6               : 1;
  unsigned PORTB7               : 1;
  } __PORTBbits_t;

extern __at(0x0006) volatile __PORTBbits_t PORTBbits;

#define _PORTB0                 0x01
#define _PORTB1                 0x02
#define _PORTB2                 0x04
#define _PORTB3                 0x08
#define _PORTB4                 0x10
#define _PORTB5                 0x20
#define _PORTB6                 0x40
#define _PORTB7                 0x80

//==============================================================================

extern __at(0x0007) __sfr GPR;

//==============================================================================
//        PCON Bits

extern __at(0x0008) __sfr PCON;

typedef union
  {
  struct
    {
    unsigned LVDEN              : 1;
    unsigned LVDSEL0            : 1;
    unsigned LVDSEL1            : 1;
    unsigned LVDSEL2            : 1;
    unsigned LVDSEL3            : 1;
    unsigned LVDF               : 1;
    unsigned EIS                : 1;
    unsigned WDTEN              : 1;
    };

  struct
    {
    unsigned                    : 1;
    unsigned LVDSEL             : 4;
    unsigned                    : 3;
    };
  } __PCONbits_t;

extern __at(0x0008) volatile __PCONbits_t PCONbits;

#define _LVDEN                  0x01
#define _LVDSEL0                0x02
#define _LVDSEL1                0x04
#define _LVDSEL2                0x08
#define _LVDSEL3                0x10
#define _LVDF                   0x20
#define _EIS                    0x40
#define _WDTEN                  0x80

//==============================================================================


//==============================================================================
//        IOCB Bits

extern __at(0x0009) __sfr IOCB;

typedef struct
  {
  unsigned IOCB0                : 1;
  unsigned IOCB1                : 1;
  unsigned IOCB2                : 1;
  unsigned IOCB3                : 1;
  unsigned IOCB4                : 1;
  unsigned IOCB5                : 1;
  unsigned IOCB6                : 1;
  unsigned IOCB7                : 1;
  } __IOCBbits_t;

extern __at(0x0009) volatile __IOCBbits_t IOCBbits;

#define _IOCB0                  0x01
#define _IOCB1                  0x02
#define _IOCB2                  0x04
#define _IOCB3                  0x08
#define _IOCB4                  0x10
#define _IOCB5                  0x20
#define _IOCB6                  0x40
#define _IOCB7                  0x80

//==============================================================================

extern __at(0x000A) __sfr PCLATH;

//==============================================================================
//        PDCON Bits

extern __at(0x000B) __sfr PDCON;

typedef union
  {
  struct
    {
    unsigned PDA0               : 1;
    unsigned PDA1               : 1;
    unsigned PDA2               : 1;
    unsigned PDA3               : 1;
    unsigned PDB0               : 1;
    unsigned PDB1               : 1;
    unsigned PDB2               : 1;
    unsigned                    : 1;
    };

  struct
    {
    unsigned PDA                : 4;
    unsigned                    : 4;
    };

  struct
    {
    unsigned                    : 4;
    unsigned PDB                : 3;
    unsigned                    : 1;
    };
  } __PDCONbits_t;

extern __at(0x000B) volatile __PDCONbits_t PDCONbits;

#define _PDA0                   0x01
#define _PDA1                   0x02
#define _PDA2                   0x04
#define _PDA3                   0x08
#define _PDB0                   0x10
#define _PDB1                   0x20
#define _PDB2                   0x40

//==============================================================================


//==============================================================================
//        ODCON Bits

extern __at(0x000C) __sfr ODCON;

typedef struct
  {
  unsigned ODB0                 : 1;
  unsigned ODB1                 : 1;
  unsigned ODB2                 : 1;
  unsigned ODB3                 : 1;
  unsigned ODB4                 : 1;
  unsigned ODB5                 : 1;
  unsigned ODB6                 : 1;
  unsigned ODB7                 : 1;
  } __ODCONbits_t;

extern __at(0x000C) volatile __ODCONbits_t ODCONbits;

#define _ODB0                   0x01
#define _ODB1                   0x02
#define _ODB2                   0x04
#define _ODB3                   0x08
#define _ODB4                   0x10
#define _ODB5                   0x20
#define _ODB6                   0x40
#define _ODB7                   0x80

//==============================================================================


//==============================================================================
//        PHCON Bits

extern __at(0x000D) __sfr PHCON;

typedef struct
  {
  unsigned PHB0                 : 1;
  unsigned PHB1                 : 1;
  unsigned PHB2                 : 1;
  unsigned PHB3                 : 1;
  unsigned PHB4                 : 1;
  unsigned PHB5                 : 1;
  unsigned PHB6                 : 1;
  unsigned PHB7                 : 1;
  } __PHCONbits_t;

extern __at(0x000D) volatile __PHCONbits_t PHCONbits;

#define _PHB0                   0x01
#define _PHB1                   0x02
#define _PHB2                   0x04
#define _PHB3                   0x08
#define _PHB4                   0x10
#define _PHB5                   0x20
#define _PHB6                   0x40
#define _PHB7                   0x80

//==============================================================================


//==============================================================================
//        INTECON Bits

extern __at(0x000E) __sfr INTECON;

typedef struct
  {
  unsigned T0IE                 : 1;
  unsigned PBIE                 : 1;
  unsigned INTE                 : 1;
  unsigned                      : 1;
  unsigned                      : 1;
  unsigned                      : 1;
  unsigned                      : 1;
  unsigned GIE                  : 1;
  } __INTECONbits_t;

extern __at(0x000E) volatile __INTECONbits_t INTECONbits;

#define _T0IE                   0x01
#define _PBIE                   0x02
#define _INTE                   0x04
#define _GIE                    0x80

//==============================================================================


//==============================================================================
//        INTFLAG Bits

extern __at(0x000F) __sfr INTFLAG;

typedef struct
  {
  unsigned T0IF                 : 1;
  unsigned PBIF                 : 1;
  unsigned INTF                 : 1;
  unsigned                      : 1;
  unsigned                      : 1;
  unsigned                      : 1;
  unsigned                      : 1;
  unsigned                      : 1;
  } __INTFLAGbits_t;

extern __at(0x000F) volatile __INTFLAGbits_t INTFLAGbits;

#define _T0IF                   0x01
#define _PBIF                   0x02
#define _INTF                   0x04

//==============================================================================
//        TRISA Bits

extern __at(0x0045) __sfr TRISA;

typedef union
  {
  struct
    {
    unsigned TRISA0             : 1;
    unsigned TRISA1             : 1;
    unsigned TRISA2             : 1;
    unsigned TRISA3             : 1;
    unsigned TRISA4             : 1;
    unsigned TRISA5             : 1;
    unsigned                    : 1;
    unsigned                    : 1;
    };

  struct
    {
    unsigned TRISA              : 6;
    unsigned                    : 2;
    };
  } __TRISAbits_t;

extern __at(0x0045) volatile __TRISAbits_t TRISAbits;

#define _TRISA0                 0x01
#define _TRISA1                 0x02
#define _TRISA2                 0x04
#define _TRISA3                 0x08
#define _TRISA4                 0x10
#define _TRISA5                 0x20

//==============================================================================


//==============================================================================
//        TRISB Bits

extern __at(0x0046) __sfr TRISB;

typedef struct
  {
  unsigned TRISB0               : 1;
  unsigned TRISB1               : 1;
  unsigned TRISB2               : 1;
  unsigned TRISB3               : 1;
  unsigned TRISB4               : 1;
  unsigned TRISB5               : 1;
  unsigned TRISB6               : 1;
  unsigned TRISB7               : 1;
  } __TRISBbits_t;

extern __at(0x0046) volatile __TRISBbits_t TRISBbits;

#define _TRISB0                 0x01
#define _TRISB1                 0x02
#define _TRISB2                 0x04
#define _TRISB3                 0x08
#define _TRISB4                 0x10
#define _TRISB5                 0x20
#define _TRISB6                 0x40
#define _TRISB7                 0x80

//==============================================================================


//==============================================================================
//        PHCON1 Bits

extern __at(0x0047) __sfr PHCON1;

typedef union
  {
  struct
    {
    unsigned PHA0               : 1;
    unsigned PHA1               : 1;
    unsigned PHA2               : 1;
    unsigned PHA3               : 1;
    unsigned PHA4               : 1;
    unsigned PHA5               : 1;
    unsigned                    : 1;
    unsigned                    : 1;
    };

  struct
    {
    unsigned PHA                : 6;
    unsigned                    : 2;
    };
  } __PHCON1bits_t;

extern __at(0x0047) volatile __PHCON1bits_t PHCON1bits;

#define _PHA0                   0x01
#define _PHA1                   0x02
#define _PHA2                   0x04
#define _PHA3                   0x08
#define _PHA4                   0x10
#define _PHA5                   0x20

//==============================================================================


//==============================================================================
//        PWMCON Bits

extern __at(0x0048) __sfr PWMCON;

typedef struct
  {
  unsigned PWM2E                : 1;
  unsigned PWM1E                : 1;
  unsigned PWMINV               : 1;
  unsigned PWMMD                : 1;
  unsigned PWMCK                : 1;
  unsigned PWM2OE               : 1;
  unsigned PWM1OE               : 1;
  unsigned PWM0OE               : 1;
  } __PWMCONbits_t;

extern __at(0x0048) volatile __PWMCONbits_t PWMCONbits;

#define _PWM2E                  0x01
#define _PWM1E                  0x02
#define _PWMINV                 0x04
#define _PWMMD                  0x08
#define _PWMCK                  0x10
#define _PWM2OE                 0x20
#define _PWM1OE                 0x40
#define _PWM0OE                 0x80

//==============================================================================

extern __at(0x0049) __sfr PWM1P;
extern __at(0x004A) __sfr PWM2P;

//==============================================================================
//        T0CR Bits

extern __at(0x004B) __sfr T0CR;

typedef struct
  {
  unsigned T1IF                 : 1;
  unsigned T1IE                 : 1;
  unsigned                      : 1;
  unsigned                      : 1;
  unsigned                      : 1;
  unsigned                      : 1;
  unsigned                      : 1;
  unsigned T0CK                 : 1;
  } __T0CRbits_t;

extern __at(0x004B) volatile __T0CRbits_t T0CRbits;

#define _T1IF                   0x01
#define _T1IE                   0x02
#define _T0CK                   0x80

//==============================================================================


//==============================================================================
//        T1CON Bits

extern __at(0x004C) __sfr T1CON;

typedef union
  {
  struct
    {
    unsigned T1PR0              : 1;
    unsigned T1PR1              : 1;
    unsigned T1PR2              : 1;
    unsigned T1CK0              : 1;
    unsigned T1CK1              : 1;
    unsigned BUZ                : 1;
    unsigned PWM0E              : 1;
    unsigned T1EN               : 1;
    };

  struct
    {
    unsigned T1PR               : 3;
    unsigned                    : 5;
    };

  struct
    {
    unsigned                    : 3;
    unsigned T1CK               : 2;
    unsigned                    : 3;
    };
  } __T1CONbits_t;

extern __at(0x004C) volatile __T1CONbits_t T1CONbits;

#define _T1PR0                  0x01
#define _T1PR1                  0x02
#define _T1PR2                  0x04
#define _T1CK0                  0x08
#define _T1CK1                  0x10
#define _BUZ                    0x20
#define _PWM0E                  0x40
#define _T1EN                   0x80

//==============================================================================

extern __at(0x004D) __sfr T1;
extern __at(0x004E) __sfr T1LOAD;
extern __at(0x004F) __sfr PWM0P;

//==============================================================================
//        OSCCON Bits

extern __at(0x0050) __sfr OSCCON;

typedef struct
  {
  unsigned SCS                  : 1;
  unsigned HXEN                 : 1;
  unsigned                      : 1;
  unsigned                      : 1;
  unsigned                      : 1;
  unsigned                      : 1;
  unsigned                      : 1;
  unsigned T0OSCEN              : 1;
  } __OSCCONbits_t;

extern __at(0x0050) volatile __OSCCONbits_t OSCCONbits;

#define _SCS                    0x01
#define _HXEN                   0x02
#define _T0OSCEN                0x80

//==============================================================================


//==============================================================================
//        LVDCON Bits

extern __at(0x0051) __sfr LVDCON;

typedef struct
  {
  unsigned LVDIE                : 1;
  unsigned LVDWP                : 1;
  unsigned LVDM                 : 1;
  unsigned                      : 1;
  unsigned                      : 1;
  unsigned                      : 1;
  unsigned                      : 1;
  unsigned                      : 1;
  } __LVDCONbits_t;

extern __at(0x0051) volatile __LVDCONbits_t LVDCONbits;

#define _LVDIE                  0x01
#define _LVDWP                  0x02
#define _LVDM                   0x04

//==============================================================================


//==============================================================================
//        PDCON1 Bits

extern __at(0x0052) __sfr PDCON1;

typedef struct
  {
  unsigned PDA4                 : 1;
  unsigned PDA5                 : 1;
  unsigned                      : 1;
  unsigned PDB3                 : 1;
  unsigned PDB4                 : 1;
  unsigned PDB5                 : 1;
  unsigned PDB6                 : 1;
  unsigned PDB7                 : 1;
  } __PDCON1bits_t;

extern __at(0x0052) volatile __PDCON1bits_t PDCON1bits;

#define _PDA4                   0x01
#define _PDA5                   0x02
#define _PDB3                   0x08
#define _PDB4                   0x10
#define _PDB5                   0x20
#define _PDB6                   0x40
#define _PDB7                   0x80

//==============================================================================


//==============================================================================
//        ODCON1 Bits

extern __at(0x0053) __sfr ODCON1;

typedef union
  {
  struct
    {
    unsigned ODA0               : 1;
    unsigned ODA1               : 1;
    unsigned ODA2               : 1;
    unsigned ODA3               : 1;
    unsigned ODA4               : 1;
    unsigned ODA5               : 1;
    unsigned ANSEL4             : 1;
    unsigned ANSEL5             : 1;
    };

  struct
    {
    unsigned ODA                : 6;
    unsigned                    : 2;
    };
  } __ODCON1bits_t;

extern __at(0x0053) volatile __ODCON1bits_t ODCON1bits;

#define _ODA0                   0x01
#define _ODA1                   0x02
#define _ODA2                   0x04
#define _ODA3                   0x08
#define _ODA4                   0x10
#define _ODA5                   0x20
#define _ANSEL4                 0x40
#define _ANSEL5                 0x80

//==============================================================================


//==============================================================================
//        PWM3EN Bits

extern __at(0x0054) __sfr PWM3EN;

typedef union
  {
  struct
    {
    unsigned PWM3_EN            : 1;
    unsigned PWM3_OEN           : 1;
    unsigned PWM31_OEN          : 1;
    unsigned PWM3M              : 1;
    unsigned EFLT               : 1;
    unsigned FLT_MODE0          : 1;
    unsigned FLT_MODE1          : 1;
    unsigned                    : 1;
    };

  struct
    {
    unsigned                    : 5;
    unsigned FLT_MODE           : 2;
    unsigned                    : 1;
    };
  } __PWM3ENbits_t;

extern __at(0x0054) volatile __PWM3ENbits_t PWM3ENbits;

#define _PWM3_EN                0x01
#define _PWM3_OEN               0x02
#define _PWM31_OEN              0x04
#define _PWM3M                  0x08
#define _EFLT                   0x10
#define _FLT_MODE0              0x20
#define _FLT_MODE1              0x40

//==============================================================================


//==============================================================================
//        PWM3C Bits

extern __at(0x0055) __sfr PWM3C;

typedef union
  {
  struct
    {
    unsigned PWM3CK0            : 1;
    unsigned PWM3CK1            : 1;
    unsigned PWM3S0             : 1;
    unsigned PWM3S1             : 1;
    unsigned FLTC               : 1;
    unsigned FLTS               : 1;
    unsigned PWM3IF             : 1;
    unsigned PWM3IE             : 1;
    };

  struct
    {
    unsigned PWM3CK             : 2;
    unsigned                    : 6;
    };

  struct
    {
    unsigned                    : 2;
    unsigned PWM3S              : 2;
    unsigned                    : 4;
    };
  } __PWM3Cbits_t;

extern __at(0x0055) volatile __PWM3Cbits_t PWM3Cbits;

#define _PWM3CK0                0x01
#define _PWM3CK1                0x02
#define _PWM3S0                 0x04
#define _PWM3S1                 0x08
#define _FLTC                   0x10
#define _FLTS                   0x20
#define _PWM3IF                 0x40
#define _PWM3IE                 0x80

//==============================================================================

extern __at(0x0056) __sfr PWM3P;
extern __at(0x0057) __sfr PWM3D;
extern __at(0x0058) __sfr PWM3DT;

//==============================================================================
//        AUXR Bits

extern __at(0x0059) __sfr AUXR;

typedef struct
  {
  unsigned PWMCT                : 1;
  unsigned PWM3CT               : 1;
  unsigned                      : 1;
  unsigned                      : 1;
  unsigned                      : 1;
  unsigned                      : 1;
  unsigned BOR                  : 1;
  unsigned POR                  : 1;
  } __AUXRbits_t;

extern __at(0x0059) volatile __AUXRbits_t AUXRbits;

#define _PWMCT                  0x01
#define _PWM3CT                 0x02
#define _BOR                    0x40
#define _POR                    0x80

//==============================================================================


//==============================================================================
//        IOCA Bits

extern __at(0x005A) __sfr IOCA;

typedef union
  {
  struct
    {
    unsigned IOCA0              : 1;
    unsigned IOCA1              : 1;
    unsigned IOCA2              : 1;
    unsigned IOCA3              : 1;
    unsigned IOCA4              : 1;
    unsigned IOCA5              : 1;
    unsigned                    : 1;
    unsigned PAIF               : 1;
    };

  struct
    {
    unsigned IOCA               : 6;
    unsigned                    : 2;
    };
  } __IOCAbits_t;

extern __at(0x005A) volatile __IOCAbits_t IOCAbits;

#define _IOCA0                  0x01
#define _IOCA1                  0x02
#define _IOCA2                  0x04
#define _IOCA3                  0x08
#define _IOCA4                  0x10
#define _IOCA5                  0x20
#define _PAIF                   0x80

//==============================================================================

extern __at(0x005B) __sfr HIRCTRM;

//==============================================================================
//
//        Configuration Bits
//
//==============================================================================

#define _CONFIG                 0x2000

//----------------------------- CONFIG Options -------------------------------

#define _FOSC_LP                0x3CFF  // LP oscillator: Low-power crystal on RA4/OSC2/CLKOUT and RA5/OSC1/CLKIN.
#define _LP_OSC                 0x3CFF  // LP oscillator: Low-power crystal on RA4/OSC2/CLKOUT and RA5/OSC1/CLKIN.
#define _FOSC_XT                0x3DFF  // XT oscillator: Crystal/resonator on RA4/OSC2/CLKOUT and RA5/OSC1/CLKIN.
#define _XT_OSC                 0x3DFF  // XT oscillator: Crystal/resonator on RA4/OSC2/CLKOUT and RA5/OSC1/CLKIN.
#define _FOSC_HS                0x3FFD  // HS oscillator: High-speed crystal/resonator on RA4/OSC2/CLKOUT and RA5/OSC1/CLKIN.
#define _HS_OSC                 0x3FFD  // HS oscillator: High-speed crystal/resonator on RA4/OSC2/CLKOUT and RA5/OSC1/CLKIN.
#define _FOSC_INTRCIO           0x3FFC  // INTOSCIO oscillator: I/O function on RA4/OSC2/CLKOUT pin, I/O function on RA5/OSC1/CLKIN.
#define _INTRC_OSC_NOCLKOUT     0x3FFC  // INTOSCIO oscillator: I/O function on RA4/OSC2/CLKOUT pin, I/O function on RA5/OSC1/CLKIN.
#define _INTOSCIO               0x3FFC  // INTOSCIO oscillator: I/O function on RA4/OSC2/CLKOUT pin, I/O function on RA5/OSC1/CLKIN.
#define _WDTE_OFF               0x3FFB  // WDT disabled and can be enabled by SWDTEN bit of the WDTCON register.
#define _WDT_OFF                0x3FFB  // WDT disabled and can be enabled by SWDTEN bit of the WDTCON register.
#define _WDTE_ON                0x3FFF  // WDT enabled.
#define _WDT_ON                 0x3FFF  // WDT enabled.
#define _CP_ON                  0x3FEF  // Program memory code protection is enabled.
#define _CP_OFF                 0x3FFF  // Program memory code protection is disabled.

//==============================================================================

//==============================================================================

#ifndef NO_BIT_DEFINES

#define PWMCT                   AUXRbits.PWMCT                  // bit 0
#define PWM3CT                  AUXRbits.PWM3CT                 // bit 1
#define BOR                     AUXRbits.BOR                    // bit 6
#define POR                     AUXRbits.POR                    // bit 7

#define T0IE                    INTECONbits.T0IE                // bit 0
#define PBIE                    INTECONbits.PBIE                // bit 1
#define INTE                    INTECONbits.INTE                // bit 2
#define GIE                     INTECONbits.GIE                 // bit 7

#define T0IF                    INTFLAGbits.T0IF                // bit 0
#define PBIF                    INTFLAGbits.PBIF                // bit 1
#define INTF                    INTFLAGbits.INTF                // bit 2

#define IOCA0                   IOCAbits.IOCA0                  // bit 0
#define IOCA1                   IOCAbits.IOCA1                  // bit 1
#define IOCA2                   IOCAbits.IOCA2                  // bit 2
#define IOCA3                   IOCAbits.IOCA3                  // bit 3
#define IOCA4                   IOCAbits.IOCA4                  // bit 4
#define IOCA5                   IOCAbits.IOCA5                  // bit 5
#define PAIF                    IOCAbits.PAIF                   // bit 7

#define IOCB0                   IOCBbits.IOCB0                  // bit 0
#define IOCB1                   IOCBbits.IOCB1                  // bit 1
#define IOCB2                   IOCBbits.IOCB2                  // bit 2
#define IOCB3                   IOCBbits.IOCB3                  // bit 3
#define IOCB4                   IOCBbits.IOCB4                  // bit 4
#define IOCB5                   IOCBbits.IOCB5                  // bit 5
#define IOCB6                   IOCBbits.IOCB6                  // bit 6
#define IOCB7                   IOCBbits.IOCB7                  // bit 7

#define LVDIE                   LVDCONbits.LVDIE                // bit 0
#define LVDWP                   LVDCONbits.LVDWP                // bit 1
#define LVDM                    LVDCONbits.LVDM                 // bit 2

#define ODB0                    ODCONbits.ODB0                  // bit 0
#define ODB1                    ODCONbits.ODB1                  // bit 1
#define ODB2                    ODCONbits.ODB2                  // bit 2
#define ODB3                    ODCONbits.ODB3                  // bit 3
#define ODB4                    ODCONbits.ODB4                  // bit 4
#define ODB5                    ODCONbits.ODB5                  // bit 5
#define ODB6                    ODCONbits.ODB6                  // bit 6
#define ODB7                    ODCONbits.ODB7                  // bit 7

#define ODA0                    ODCON1bits.ODA0                 // bit 0
#define ODA1                    ODCON1bits.ODA1                 // bit 1
#define ODA2                    ODCON1bits.ODA2                 // bit 2
#define ODA3                    ODCON1bits.ODA3                 // bit 3
#define ODA4                    ODCON1bits.ODA4                 // bit 4
#define ODA5                    ODCON1bits.ODA5                 // bit 5
#define ANSEL4                  ODCON1bits.ANSEL4               // bit 6
#define ANSEL5                  ODCON1bits.ANSEL5               // bit 7

#define PS0                     OPTIONbits.PS0              // bit 0
#define PS1                     OPTIONbits.PS1              // bit 1
#define PS2                     OPTIONbits.PS2              // bit 2
#define PSA                     OPTIONbits.PSA              // bit 3
#define T0SE                    OPTIONbits.T0SE             // bit 4
#define T0CS                    OPTIONbits.T0CS             // bit 5
#define INTEDG                  OPTIONbits.INTEDG           // bit 6

#define SCS                     OSCCONbits.SCS                  // bit 0
#define HXEN                    OSCCONbits.HXEN                 // bit 1
#define T0OSCEN                 OSCCONbits.T0OSCEN              // bit 7

#define LVDEN                   PCONbits.LVDEN                  // bit 0
#define LVDSEL0                 PCONbits.LVDSEL0                // bit 1
#define LVDSEL1                 PCONbits.LVDSEL1                // bit 2
#define LVDSEL2                 PCONbits.LVDSEL2                // bit 3
#define LVDSEL3                 PCONbits.LVDSEL3                // bit 4
#define LVDF                    PCONbits.LVDF                   // bit 5
#define EIS                     PCONbits.EIS                    // bit 6
#define WDTEN                   PCONbits.WDTEN                  // bit 7

#define PDA0                    PDCONbits.PDA0                  // bit 0
#define PDA1                    PDCONbits.PDA1                  // bit 1
#define PDA2                    PDCONbits.PDA2                  // bit 2
#define PDA3                    PDCONbits.PDA3                  // bit 3
#define PDB0                    PDCONbits.PDB0                  // bit 4
#define PDB1                    PDCONbits.PDB1                  // bit 5
#define PDB2                    PDCONbits.PDB2                  // bit 6

#define PDA4                    PDCON1bits.PDA4                 // bit 0
#define PDA5                    PDCON1bits.PDA5                 // bit 1
#define PDB3                    PDCON1bits.PDB3                 // bit 3
#define PDB4                    PDCON1bits.PDB4                 // bit 4
#define PDB5                    PDCON1bits.PDB5                 // bit 5
#define PDB6                    PDCON1bits.PDB6                 // bit 6
#define PDB7                    PDCON1bits.PDB7                 // bit 7

#define PHB0                    PHCONbits.PHB0                  // bit 0
#define PHB1                    PHCONbits.PHB1                  // bit 1
#define PHB2                    PHCONbits.PHB2                  // bit 2
#define PHB3                    PHCONbits.PHB3                  // bit 3
#define PHB4                    PHCONbits.PHB4                  // bit 4
#define PHB5                    PHCONbits.PHB5                  // bit 5
#define PHB6                    PHCONbits.PHB6                  // bit 6
#define PHB7                    PHCONbits.PHB7                  // bit 7

#define PHA0                    PHCON1bits.PHA0                 // bit 0
#define PHA1                    PHCON1bits.PHA1                 // bit 1
#define PHA2                    PHCON1bits.PHA2                 // bit 2
#define PHA3                    PHCON1bits.PHA3                 // bit 3
#define PHA4                    PHCON1bits.PHA4                 // bit 4
#define PHA5                    PHCON1bits.PHA5                 // bit 5

#define PORTA0                  PORTAbits.PORTA0                // bit 0
#define PORTA1                  PORTAbits.PORTA1                // bit 1
#define PORTA2                  PORTAbits.PORTA2                // bit 2
#define PORTA3                  PORTAbits.PORTA3                // bit 3
#define PORTA4                  PORTAbits.PORTA4                // bit 4
#define PORTA5                  PORTAbits.PORTA5                // bit 5

#define PORTB0                  PORTBbits.PORTB0                // bit 0
#define PORTB1                  PORTBbits.PORTB1                // bit 1
#define PORTB2                  PORTBbits.PORTB2                // bit 2
#define PORTB3                  PORTBbits.PORTB3                // bit 3
#define PORTB4                  PORTBbits.PORTB4                // bit 4
#define PORTB5                  PORTBbits.PORTB5                // bit 5
#define PORTB6                  PORTBbits.PORTB6                // bit 6
#define PORTB7                  PORTBbits.PORTB7                // bit 7

#define PWM3CK0                 PWM3Cbits.PWM3CK0               // bit 0
#define PWM3CK1                 PWM3Cbits.PWM3CK1               // bit 1
#define PWM3S0                  PWM3Cbits.PWM3S0                // bit 2
#define PWM3S1                  PWM3Cbits.PWM3S1                // bit 3
#define FLTC                    PWM3Cbits.FLTC                  // bit 4
#define FLTS                    PWM3Cbits.FLTS                  // bit 5
#define PWM3IF                  PWM3Cbits.PWM3IF                // bit 6
#define PWM3IE                  PWM3Cbits.PWM3IE                // bit 7

#define PWM3_EN                 PWM3ENbits.PWM3_EN              // bit 0
#define PWM3_OEN                PWM3ENbits.PWM3_OEN             // bit 1
#define PWM31_OEN               PWM3ENbits.PWM31_OEN            // bit 2
#define PWM3M                   PWM3ENbits.PWM3M                // bit 3
#define EFLT                    PWM3ENbits.EFLT                 // bit 4
#define FLT_MODE0               PWM3ENbits.FLT_MODE0            // bit 5
#define FLT_MODE1               PWM3ENbits.FLT_MODE1            // bit 6

#define PWM2E                   PWMCONbits.PWM2E                // bit 0
#define PWM1E                   PWMCONbits.PWM1E                // bit 1
#define PWMINV                  PWMCONbits.PWMINV               // bit 2
#define PWMMD                   PWMCONbits.PWMMD                // bit 3
#define PWMCK                   PWMCONbits.PWMCK                // bit 4
#define PWM2OE                  PWMCONbits.PWM2OE               // bit 5
#define PWM1OE                  PWMCONbits.PWM1OE               // bit 6
#define PWM0OE                  PWMCONbits.PWM0OE               // bit 7

#define C                       STATUSbits.C                    // bit 0
#define DC                      STATUSbits.DC                   // bit 1
#define Z                       STATUSbits.Z                    // bit 2
#define PD                      STATUSbits.PD                   // bit 3
#define TO                      STATUSbits.TO                   // bit 4
#define GP0                     STATUSbits.GP0                  // bit 5
#define GP1                     STATUSbits.GP1                  // bit 6
#define RST                     STATUSbits.RST                  // bit 7

#define T1IF                    T0CRbits.T1IF                   // bit 0
#define T1IE                    T0CRbits.T1IE                   // bit 1
#define T0CK                    T0CRbits.T0CK                   // bit 7

#define T1PR0                   T1CONbits.T1PR0                 // bit 0
#define T1PR1                   T1CONbits.T1PR1                 // bit 1
#define T1PR2                   T1CONbits.T1PR2                 // bit 2
#define T1CK0                   T1CONbits.T1CK0                 // bit 3
#define T1CK1                   T1CONbits.T1CK1                 // bit 4
#define BUZ                     T1CONbits.BUZ                   // bit 5
#define PWM0E                   T1CONbits.PWM0E                 // bit 6
#define T1EN                    T1CONbits.T1EN                  // bit 7

#define TRISA0                  TRISAbits.TRISA0                // bit 0
#define TRISA1                  TRISAbits.TRISA1                // bit 1
#define TRISA2                  TRISAbits.TRISA2                // bit 2
#define TRISA3                  TRISAbits.TRISA3                // bit 3
#define TRISA4                  TRISAbits.TRISA4                // bit 4
#define TRISA5                  TRISAbits.TRISA5                // bit 5

#define TRISB0                  TRISBbits.TRISB0                // bit 0
#define TRISB1                  TRISBbits.TRISB1                // bit 1
#define TRISB2                  TRISBbits.TRISB2                // bit 2
#define TRISB3                  TRISBbits.TRISB3                // bit 3
#define TRISB4                  TRISBbits.TRISB4                // bit 4
#define TRISB5                  TRISBbits.TRISB5                // bit 5
#define TRISB6                  TRISBbits.TRISB6                // bit 6
#define TRISB7                  TRISBbits.TRISB7                // bit 7

#endif // #ifndef NO_BIT_DEFINES

#endif // #ifndef __PIC16P015L_H__